{"version":3,"file":"components/SliderInput/SliderInput.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACKO,MAAM,WAAW;IAUpB,YAAY,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,GAAG,EAAE,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAoB;QAC5F,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,MAAM;QACF,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC9C,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACtD,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACjD,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC7B,YAAY,CAAC,SAAS,GAAG,uBAAuB,CAAC;QACjD,eAAe,CAAC,SAAS,GAAG,qBAAqB,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC;QACzE,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAE5C,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACrD,YAAY,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAC1B,YAAY,CAAC,SAAS,GAAG,eAAe,CAAC;QACzC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QACvC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QACvC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC3C,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEzC,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;YAC7C,MAAM,MAAM,GAAG,KAAK,CAAC,MAA0B,CAAC;YAChD,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAEzC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACzB,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,eAAe,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAC1C,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAClC,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QAErC,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ","sources":["webpack://cipher/webpack/bootstrap","webpack://cipher/webpack/runtime/define property getters","webpack://cipher/webpack/runtime/hasOwnProperty shorthand","webpack://cipher/webpack/runtime/make namespace object","webpack://cipher/./src/components/slider-input/SliderInput.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","interface SliderInputProps {\n    id: string;\n    value: number;\n    min: number;\n    max: number;\n    className?: string;\n    step?: number;\n    label?: string;\n    onChange?: (value: number) => void;\n}\n\nexport class SliderInput {\n    private id: string;\n    private value: number;\n    private min: number;\n    private max: number;\n    private className?: string;\n    private step: number;\n    private label?: string;\n    private onChange?: (value: number) => void;\n\n    constructor({ id, value, min, max, className = '', step = 1, label, onChange }: SliderInputProps) {\n        this.id = id;\n        this.value = value;\n        this.min = min;\n        this.max = max;\n        this.className = className;\n        this.step = step;\n        this.label = label;\n        this.onChange = onChange;\n    }\n\n    render(): HTMLElement {\n        const wrapper = document.createElement('div');\n        const sliderContainer = document.createElement('div');\n        const labelElement = document.createElement('p');\n        wrapper.className = 'slider';\n        labelElement.className = 'slider__label-element';\n        sliderContainer.className = `slider__container ${this.className}`.trim();\n        labelElement.textContent = this.label || '';\n\n        const inputElement = document.createElement('input');\n        inputElement.type = 'range';\n        inputElement.id = this.id;\n        inputElement.className = 'slider__input';\n        inputElement.min = this.min.toString();\n        inputElement.max = this.max.toString();\n        inputElement.value = this.value.toString();\n        inputElement.step = this.step.toString();\n\n        inputElement.addEventListener('input', (event) => {\n            const target = event.target as HTMLInputElement;\n            const value = parseInt(target.value, 10);\n\n            if (this.onChange) {\n                this.onChange(value);\n            }\n        });\n\n        sliderContainer.appendChild(inputElement);\n        wrapper.appendChild(labelElement);\n        wrapper.appendChild(sliderContainer);\n\n        return wrapper;\n    }\n}"],"names":[],"sourceRoot":""}