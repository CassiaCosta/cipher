{"version":3,"file":"components/ClearButton/ClearButton.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACCO,MAAM,WAAW;IAMpB,YAAY,EAAC,QAAQ,EAAE,KAAK,GAAG,QAAQ,EAAE,IAAI,EAAE,SAAS,GAAG,EAAE,EAAmB;QAC5E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAED,MAAM;QACF,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACvD,aAAa,CAAC,SAAS,GAAG,aAAa,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC;QAE/D,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAC/D,aAAa,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAC5C,CAAC;QAED,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;gBACtC,aAAa,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC;YACzC,CAAC;iBAAM,CAAC;gBACJ,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAChD,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;gBAClC,aAAa,CAAC,WAAW,CAAC,WAAW,CAAC;YAC1C,CAAC;QACL,CAAC;QAED,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC9B,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,OAAO,aAAa,CAAC;IACzB,CAAC;IAEO,aAAa;QACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC9B,MAAM,aAAa,GAAG,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAE/F,IAAI,aAAa,EAAE,CAAC;gBAChB,IAAI,aAAa,YAAY,gBAAgB,EAAE,CAAC;oBAC5C,IAAI,aAAa,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;wBACjC,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,GAAG,IAAI,GAAG,CAAC;oBACnD,CAAC;yBAAM,CAAC;wBACJ,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;oBAC7B,CAAC;oBAED,aAAa,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;gBACpD,CAAC;qBAAM,IAAI,aAAa,YAAY,mBAAmB,EAAE,CAAC;oBACtD,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;gBAC7B,CAAC;qBAAM,IAAI,aAAa,YAAY,iBAAiB,EAAE,CAAC;oBACpD,aAAa,CAAC,aAAa,GAAG,CAAC,CAAC;gBACpC,CAAC;YACL,CAAC;QACL,CAAC,CAAC;IACN,CAAC;CACJ","sources":["webpack://cipher/webpack/bootstrap","webpack://cipher/webpack/runtime/define property getters","webpack://cipher/webpack/runtime/hasOwnProperty shorthand","webpack://cipher/webpack/runtime/make namespace object","webpack://cipher/./src/components/buttons/clear-button/ClearButton.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","interface ClearButtonProps {\n    elements: (string | HTMLElement)[];\n    label?: string;\n    icon?: string;\n    className?: string;\n}\n\nexport class ClearButton {\n    private elements: (string | HTMLElement)[];\n    private label: string;\n    private icon?: string;\n    private className: string;\n\n    constructor({elements, label = 'Limpar', icon, className = ''}: ClearButtonProps) {\n        this.elements = elements;\n        this.label = label;\n        this.icon = icon;\n        this.className = className;\n    }\n\n    render(): HTMLElement {\n        const buttonElement = document.createElement('button');\n        buttonElement.className = `btn-clear ${this.className}`.trim();\n\n        if (this.label) {\n            const labelElement = document.createTextNode(`${this.label} `);\n            buttonElement.appendChild(labelElement);\n        }\n\n        if (this.icon) {\n            if (this.icon.trim().startsWith('<svg')) {\n                buttonElement.innerHTML += this.icon;\n            } else {\n                const iconElement = document.createElement('i');\n                iconElement.className = this.icon;\n                buttonElement.appendChild(iconElement)\n            }\n        }\n\n        buttonElement.addEventListener('click', () => {\n            console.log('Limpar clicado');            \n            this.clearElements();\n        });\n\n        return buttonElement;\n    }\n\n    private clearElements(): void {\n        this.elements.forEach((element) => {\n            const targetElement = typeof element === 'string' ? document.getElementById(element) : element;\n\n            if (targetElement) {\n                if (targetElement instanceof HTMLInputElement) {\n                    if (targetElement.type === 'range') {\n                        targetElement.value = targetElement.min || '0';\n                    } else {\n                        targetElement.value = '';\n                    }\n\n                    targetElement.dispatchEvent(new Event('input'));\n                } else if (targetElement instanceof HTMLTextAreaElement) {\n                    targetElement.value = '';\n                } else if (targetElement instanceof HTMLSelectElement) {\n                    targetElement.selectedIndex = 0;\n                }\n            }\n        })\n    }\n}"],"names":[],"sourceRoot":""}