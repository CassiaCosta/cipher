{"version":3,"file":"components/AccordionItem/AccordionItem.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACAO,MAAM,aAAa;IAOtB,YAAY,KAAyB;QAF9B,WAAM,GAAY,KAAK,CAAC;QAG3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;IAEO,UAAU;QACd,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC;QAEnC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,SAAS,GAAG,mBAAmB,CAAC;QACvC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE9D,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,iBAAiB,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG;;;;;;;;;SAS5B,CAAC;QAEF,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC/C,OAAO,CAAC,SAAS,GAAG,kBAAkB,CAAC;QACvC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAEvC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAEzB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,oBAAoB,CAAC;QAE9C,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACnD,YAAY,CAAC,SAAS,GAAG,0BAA0B,CAAC;QACpD,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAE9C,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE/B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,IAAI;QACA,IAAI,IAAI,CAAC,MAAM;YAAE,OAAO;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAC1D,CAAC;IAED,KAAK;QACD,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,OAAO;QACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;IAC7D,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;CACJ","sources":["webpack://cipher/webpack/bootstrap","webpack://cipher/webpack/runtime/define property getters","webpack://cipher/webpack/runtime/hasOwnProperty shorthand","webpack://cipher/webpack/runtime/make namespace object","webpack://cipher/./src/components/accordion/accordion-item/AccordionItem.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","interface AccordionItemProps {\n    title: string;\n    content: string;\n    onToggle: () => void;\n}\n\nexport class AccordionItem {\n    private props: AccordionItemProps;\n    private container: HTMLElement;\n    private content!: HTMLElement;\n    private iconWrapper!: HTMLElement;\n    public isOpen: boolean = false;\n\n    constructor(props: AccordionItemProps) {\n        this.props = props;\n        this.container = this.createItem();\n    }\n\n    private createItem(): HTMLElement {\n        const item = document.createElement('div');\n        item.className = 'accordion__item';\n\n        const header = document.createElement('div');\n        header.className = 'accordion__header';\n        header.addEventListener('click', () => this.props.onToggle());\n\n        this.iconWrapper = document.createElement('span');\n        this.iconWrapper.className = 'accordion__icon';\n        this.iconWrapper.innerHTML = `\n            <svg viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M11.25 22.5L18.75 15L11.25 7.5\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-width=\"4\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"/>\n            </svg>\n        `;\n\n        const titleEl = document.createElement('span');\n        titleEl.className = 'accordion__title';\n        titleEl.textContent = this.props.title;\n\n        header.appendChild(this.iconWrapper);\n        header.appendChild(titleEl);\n        item.appendChild(header);\n\n        this.content = document.createElement('div');\n        this.content.className = 'accordion__content';\n\n        const innerContent = document.createElement('div');\n        innerContent.className = 'accordion__content-inner';\n        innerContent.textContent = this.props.content;\n\n        this.content.appendChild(innerContent);\n        item.appendChild(this.content);\n\n        return item;\n    }\n\n    open(): void {\n        if (this.isOpen) return;\n        this.isOpen = true;\n        this.container.classList.add('accordion__item--open');\n    }\n\n    close(): void {\n        if (!this.isOpen) return;\n        this.isOpen = false;\n        this.container.classList.remove('accordion__item--open');\n    }\n\n    render(): HTMLElement {\n        return this.container;\n    }\n}"],"names":[],"sourceRoot":""}