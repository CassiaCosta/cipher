{"version":3,"file":"components/generateButton/generateButton.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACAO,MAAM,cAAc;IAKvB,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,GAAG,EAAE,EAAsB;QAC9D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAED,MAAM;QACF,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACvD,aAAa,CAAC,SAAS,GAAG,gBAAgB,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC;QAClE,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;QACvC,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAEtD,OAAO,aAAa,CAAC;IACzB,CAAC;CACJ","sources":["webpack://cipher/webpack/bootstrap","webpack://cipher/webpack/runtime/define property getters","webpack://cipher/webpack/runtime/hasOwnProperty shorthand","webpack://cipher/webpack/runtime/make namespace object","webpack://cipher/./src/components/buttons/generate-button/generateButton.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","interface GenerateButtonProps {\n    label: string;\n    onClick: () => void;\n    className?: string;\n}\n\nexport class GenerateButton {\n    private label: string;\n    private onClick: () => void;\n    private className?: string;\n\n    constructor({ label, onClick, className = ''}: GenerateButtonProps) {\n        this.label = label;\n        this.onClick = onClick;\n        this.className = className;\n    }\n\n    render(): HTMLElement {\n        const buttonElement = document.createElement('button');\n        buttonElement.className = `btn-generate ${this.className}`.trim();\n        buttonElement.textContent = this.label;\n        buttonElement.addEventListener('click', this.onClick);\n\n        return buttonElement;\n    }\n}"],"names":[],"sourceRoot":""}